/*
 * Copyright (C) 2024-2025 Volt Active Data Inc.
 *
 * Use of this source code is governed by an MIT
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */

@Library('voltdb') _

pipeline {
    agent {
       label 'gcloud-build--rocky-linux-8--x64'
    }

    environment {
       JAVA_HOME = "/opt/corretto_java17"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timeout(time: 60, unit: 'MINUTES')
    }

    stages {
        stage('Validate Version') {
            steps {
                script {
                    startedStage('Validate Version')

                    def currentVersion = sh(
                        returnStdout: true,
                        script: "mvn help:evaluate -Dexpression=project.version -q -DforceStdout"
                    ).trim()

                    echo "Building version: ${currentVersion}"

                    // Validate that CI builds use SNAPSHOT versions
                    if (!currentVersion.endsWith('-SNAPSHOT')) {
                        echo "Warning: Building with non-SNAPSHOT version: ${currentVersion}"
                    }
                }
            }
            post {
                success {
                    successfulStage('Validate Version')
                }
                failure {
                    failedStage('Validate Version')
                }
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    startedStage('Build and Test')
                }

                script {
                    // Login to Docker Hub for pulling test images
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub',
                        usernameVariable: 'DOCKER_CREDS_USR',
                        passwordVariable: 'DOCKER_CREDS_PSW'
                    )]) {
                        sh '''
                            echo "Logging in to Docker..."
                            echo ${DOCKER_CREDS_PSW} | docker login -u ${DOCKER_CREDS_USR} --password-stdin docker.io
                        '''
                    }

                    // Write VoltDB license for tests
                    withCredentials([string(credentialsId: 'VOLTDB_LICENSE', variable: 'LICENSE')]) {
                        writeFile file: "/tmp/voltdb-license.xml", text: "$LICENSE", encoding: "UTF-8"
                    }

                    // Run Maven build and tests
                    sh '''
                       mvn clean verify javadoc:javadoc archetype:update-local-catalog
                    '''
                }
            }
            post {
                success {
                    successfulStage('Build and Test')
                }
                unsuccessful {
                    failedStage('Build and Test')
                }
                always {
                    // Publish test results
                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                    junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build successful on branch ${env.BRANCH_NAME}"
        }
        failure {
            echo "❌ Build failed on branch ${env.BRANCH_NAME}"
        }
    }
}
